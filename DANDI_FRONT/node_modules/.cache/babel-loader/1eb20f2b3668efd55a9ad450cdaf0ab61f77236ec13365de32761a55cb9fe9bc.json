{"ast":null,"code":"var _jsxFileName = \"/Users/jung-yeonjin/Desktop/DANDI\\u1109\\u116E\\u110C\\u1165\\u11BC\\u110C\\u116E\\u11BC/DANDI_FRONT/src/client/pages/components/StampRows.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { AuthContext } from '../../context/Authcontext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StampRows() {\n  _s();\n  // try to use member's information\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [stampRecord, setStampRecord] = useState([]);\n\n  // call the fetchRecordRow function to populate the recordRow state\n\n  useEffect(() => {\n    const fetchStampRecord = async () => {\n      try {\n        // hard coding\n        const member_no = currentUser === null || currentUser === void 0 ? void 0 : currentUser.no;\n        //학교 컴퓨터\n        //const response= await axios.get (\"http://192.168.0.82:8080/api/hint\")\n\n        const response = await axios.get(`https://api-fvwt.onrender.com/api/record/stamp/${member_no}`);\n        setStampRecord(response.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    fetchStampRecord();\n  }, []);\n\n  // loop through the recordRow data and render the corresponding img element based on a matching data-code\n  const recordRows = stampRecord.map((row, index) => {\n    //console.log(row.code+row.visited)\n    let imageSource = row.visited === \"Y\" ? `../file/${row.code}_V.png` : `../file/${row.code}.png`;\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${imageSource}`,\n      alt: row.code\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stampRow\",\n    children: recordRows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(StampRows, \"CL0oBw3AygUKmrTlXwtU7p3+wus=\");\n_c = StampRows;\nexport default StampRows;\nvar _c;\n$RefreshReg$(_c, \"StampRows\");","map":{"version":3,"names":["React","useState","useContext","useEffect","AuthContext","axios","jsxDEV","_jsxDEV","StampRows","_s","currentUser","stampRecord","setStampRecord","fetchStampRecord","member_no","no","response","get","data","err","console","log","recordRows","map","row","index","imageSource","visited","code","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/Users/jung-yeonjin/Desktop/DANDI수정중/DANDI_FRONT/src/client/pages/components/StampRows.js"],"sourcesContent":["import React , { useState , useContext , useEffect } from 'react'\r\nimport { AuthContext } from '../../context/Authcontext';\r\nimport axios from 'axios'\r\n\r\nfunction StampRows() {\r\n\r\n  // try to use member's information\r\n  const {currentUser } = useContext(AuthContext);\r\n  const [stampRecord, setStampRecord] = useState([]);\r\n\r\n    // call the fetchRecordRow function to populate the recordRow state\r\n\r\n    useEffect(() => {\r\n        const fetchStampRecord = async () => {\r\n            try {\r\n            // hard coding\r\n            const member_no = currentUser?.no;\r\n            //학교 컴퓨터\r\n            //const response= await axios.get (\"http://192.168.0.82:8080/api/hint\")\r\n            \r\n            const response= await axios.get (`https://api-fvwt.onrender.com/api/record/stamp/${member_no}`);\r\n            setStampRecord(response.data);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    \r\n        fetchStampRecord();\r\n    },[]);\r\n\r\n\r\n // loop through the recordRow data and render the corresponding img element based on a matching data-code\r\n  const recordRows = stampRecord.map((row, index) => {\r\n    //console.log(row.code+row.visited)\r\n    let imageSource = row.visited === \"Y\" ? `../file/${row.code}_V.png` : `../file/${row.code}.png`;\r\n    return (\r\n      <img key={index} src={`${imageSource}`} alt={row.code}/>\r\n    );\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <div className='stampRow'>{recordRows}</div>\r\n  )\r\n\r\n}\r\n\r\nexport default StampRows"],"mappings":";;AAAA,OAAOA,KAAK,IAAKC,QAAQ,EAAGC,UAAU,EAAGC,SAAS,QAAQ,OAAO;AACjE,SAASC,WAAW,QAAQ,2BAA2B;AACvD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEnB;EACA,MAAM;IAACC;EAAY,CAAC,GAAGR,UAAU,CAACE,WAAW,CAAC;EAC9C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEhD;;EAEAE,SAAS,CAAC,MAAM;IACZ,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACJ;QACA,MAAMC,SAAS,GAAGJ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEK,EAAE;QACjC;QACA;;QAEA,MAAMC,QAAQ,GAAE,MAAMX,KAAK,CAACY,GAAG,CAAG,kDAAiDH,SAAU,EAAC,CAAC;QAC/FF,cAAc,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB;IACJ,CAAC;IAEDN,gBAAgB,EAAE;EACtB,CAAC,EAAC,EAAE,CAAC;;EAGR;EACC,MAAMS,UAAU,GAAGX,WAAW,CAACY,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;IACjD;IACA,IAAIC,WAAW,GAAGF,GAAG,CAACG,OAAO,KAAK,GAAG,GAAI,WAAUH,GAAG,CAACI,IAAK,QAAO,GAAI,WAAUJ,GAAG,CAACI,IAAK,MAAK;IAC/F,oBACErB,OAAA;MAAiBsB,GAAG,EAAG,GAAEH,WAAY,EAAE;MAACI,GAAG,EAAEN,GAAG,CAACI;IAAK,GAA5CH,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAyC;EAE5D,CAAC,CAAC;EAIF,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,UAAU;IAAAC,QAAA,EAAEd;EAAU;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAO;AAGhD;AAACzB,EAAA,CA1CQD,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AA4ClB,eAAeA,SAAS;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}